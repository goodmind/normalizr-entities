// flow-typed signature: 4e443d32d7be4f051989775309901f2e
// flow-typed version: <<STUB>>/normalizr_v^3.2.3/flow_v0.54.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'normalizr'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */


declare module 'normalizr' {
  declare type schema$StrategyFunction = (value: any, parent: any, key: string) => any;
  declare type schema$SchemaFunction = (value: any, parent: any, key: string) => string;
  declare type schema$MergeFunction = (entityA: any, entityB: any) => any;
  declare type schema$EntityOptions = {
    idAttribute?: string | schema$SchemaFunction,
    mergeStrategy?: schema$MergeFunction,
    processStrategy?: schema$StrategyFunction
  };
  
  declare class Schema$Array {
    constructor(definition: Schema, schemaAttribute?: string | schema$SchemaFunction): Schema$Array;
    define(definition: Schema): void;
    denormalize(input: any, unvisit: any): mixed;
  }
  
  declare export class Schema$Entity {
    constructor(key: string, definition?: Schema, options?: schema$EntityOptions): Schema$Entity;
    define(definition: Schema): void;
    denormalize(input: any, unvisit: any): mixed;
    key: string;
  }
  
  declare export class Schema$Object {
    constructor(definition: {[key: string]: Schema}): Schema$Object;
    define(definition: Schema): void;
    denormalize(input: any, unvisit: any): mixed;
  }
  
  declare class Schema$Union {
    constructor(definition: Schema, schemaAttribute?: string | schema$SchemaFunction): Schema$Union;
    define(definition: Schema): void;
    denormalize(input: any, unvisit: any): mixed;
  }
  
  declare class Schema$Values {
    constructor(definition: Schema, schemaAttribute?: string | schema$SchemaFunction): Schema$Values;
    define(definition: Schema): void;
    denormalize(input: any, unvisit: any): mixed;
  }

  declare type schema$Schema = {
    StrategyFunction: schema$StrategyFunction,
    SchemaFunction: schema$SchemaFunction,
    MergeFunction: schema$MergeFunction,
    Array: typeof Schema$Array,
    Entity: typeof Schema$Entity,
    Object: typeof Schema$Object,
    Union: typeof Schema$Union,
    Values: typeof Schema$Values,
  
    EntityOptions: schema$EntityOptions,
  }

  declare export var schema: schema$Schema;
  
  declare export type Schema =
    schema.Array |
    schema.Entity |
    schema.Object |
    schema.Union |
    schema.Values |
    schema.Array[] |
    schema.Entity[] |
    schema.Object[] |
    schema.Union[] |
    schema.Values[] |
    {[key: string]: Schema};

  declare export function normalize(
    data: any,
    schema: Schema
  ): {
    entities: any,
    result: any
  };
  
  declare export function denormalize(
    input: any,
    schema: Schema,
    entities: any
  ): any;

  //declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'normalizr/dist/normalizr.amd' {
  declare module.exports: any;
}

declare module 'normalizr/dist/normalizr.amd.min' {
  declare module.exports: any;
}

declare module 'normalizr/dist/normalizr' {
  declare module.exports: any;
}

declare module 'normalizr/dist/normalizr.min' {
  declare module.exports: any;
}

declare module 'normalizr/dist/normalizr.umd' {
  declare module.exports: any;
}

declare module 'normalizr/dist/normalizr.umd.min' {
  declare module.exports: any;
}

declare module 'normalizr/dist/src/index' {
  declare module.exports: any;
}

declare module 'normalizr/dist/src/schemas/Array' {
  declare module.exports: any;
}

declare module 'normalizr/dist/src/schemas/Entity' {
  import type { Schema$Entity } from 'normalizr'
  declare export default Schema$Entity;
}

declare module 'normalizr/dist/src/schemas/ImmutableUtils' {
  declare module.exports: any;
}

declare module 'normalizr/dist/src/schemas/Object' {
  import type { Schema$Object } from 'normalizr'
  declare export default Schema$Object;
}

declare module 'normalizr/dist/src/schemas/Polymorphic' {
  declare module.exports: any;
}

declare module 'normalizr/dist/src/schemas/Union' {
  declare module.exports: any;
}

declare module 'normalizr/dist/src/schemas/Values' {
  declare module.exports: any;
}

// Filename aliases
declare module 'normalizr/dist/normalizr.amd.js' {
  declare module.exports: $Exports<'normalizr/dist/normalizr.amd'>;
}
declare module 'normalizr/dist/normalizr.amd.min.js' {
  declare module.exports: $Exports<'normalizr/dist/normalizr.amd.min'>;
}
declare module 'normalizr/dist/normalizr.js' {
  declare module.exports: $Exports<'normalizr/dist/normalizr'>;
}
declare module 'normalizr/dist/normalizr.min.js' {
  declare module.exports: $Exports<'normalizr/dist/normalizr.min'>;
}
declare module 'normalizr/dist/normalizr.umd.js' {
  declare module.exports: $Exports<'normalizr/dist/normalizr.umd'>;
}
declare module 'normalizr/dist/normalizr.umd.min.js' {
  declare module.exports: $Exports<'normalizr/dist/normalizr.umd.min'>;
}
declare module 'normalizr/dist/src/index.js' {
  declare module.exports: $Exports<'normalizr/dist/src/index'>;
}
declare module 'normalizr/dist/src/schemas/Array.js' {
  declare module.exports: $Exports<'normalizr/dist/src/schemas/Array'>;
}
declare module 'normalizr/dist/src/schemas/Entity.js' {
  declare module.exports: $Exports<'normalizr/dist/src/schemas/Entity'>;
}
declare module 'normalizr/dist/src/schemas/ImmutableUtils.js' {
  declare module.exports: $Exports<'normalizr/dist/src/schemas/ImmutableUtils'>;
}
declare module 'normalizr/dist/src/schemas/Object.js' {
  declare module.exports: $Exports<'normalizr/dist/src/schemas/Object'>;
}
declare module 'normalizr/dist/src/schemas/Polymorphic.js' {
  declare module.exports: $Exports<'normalizr/dist/src/schemas/Polymorphic'>;
}
declare module 'normalizr/dist/src/schemas/Union.js' {
  declare module.exports: $Exports<'normalizr/dist/src/schemas/Union'>;
}
declare module 'normalizr/dist/src/schemas/Values.js' {
  declare module.exports: $Exports<'normalizr/dist/src/schemas/Values'>;
}
